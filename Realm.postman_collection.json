{
	"info": {
		"_postman_id": "d1c13df3-f10a-41e1-9f82-497a4e12459a",
		"name": "Realm",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Query Realms",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "    query realms(\r\n    $skip: Int) \r\n    { \r\n        realms( \r\n        first: 1000\r\n        skip: $skip ) \r\n            { \r\n               id realmId name size owner feature1 feature2 feature3 partner \r\n               metrics\r\n               {\r\n                   name totalAmount totalAdded\r\n               }\r\n               supplies\r\n               {\r\n                   name totalAmount\r\n               }\r\n               staked\r\n               resourceId\r\n            }\r\n            }\r\n            ",
						"variables": "{\r\n\"skip\":0\r\n}"
					}
				},
				"url": {
					"raw": "https://api.thegraph.com/subgraphs/name/jona/realm",
					"protocol": "https",
					"host": [
						"api",
						"thegraph",
						"com"
					],
					"path": [
						"subgraphs",
						"name",
						"jona",
						"realm"
					]
				}
			},
			"response": []
		},
		{
			"name": "Query Realm By Id",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "    query realms(\r\n    $id: String\r\n    ) \r\n    { \r\n        realms( \r\n        where: { \r\n            realmId: $id } ) \r\n            { \r\n                id realmId name size owner feature1 feature2 feature3 partner\r\n            }\r\n     }\r\n            ",
						"variables": "{\r\n    \"id\":\"154\"\r\n    }"
					}
				},
				"url": {
					"raw": "https://api.thegraph.com/subgraphs/name/jona/realm",
					"protocol": "https",
					"host": [
						"api",
						"thegraph",
						"com"
					],
					"path": [
						"subgraphs",
						"name",
						"jona",
						"realm"
					]
				}
			},
			"response": []
		},
		{
			"name": "Query Realm Collectibles",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query collectables(\r\n    $first: int\r\n    $skip: int\r\n){\r\n  resources(\r\n    first: $first\r\n    skip: $skip\r\n    orderBy: totalResource\r\n    orderDirection: asc\r\n  ) {\r\n    id\r\n    resourceId\r\n    resourceName\r\n    totalResource\r\n    totalLegacyResource\r\n    realm\r\n    {\r\n        id\r\n    }\r\n\r\n  }\r\n}\r\n",
						"variables": "{\r\n    \"first\":1000,\r\n    \"skip\":0\r\n}"
					}
				},
				"url": {
					"raw": "https://api.thegraph.com/subgraphs/name/jona/realm",
					"protocol": "https",
					"host": [
						"api",
						"thegraph",
						"com"
					],
					"path": [
						"subgraphs",
						"name",
						"jona",
						"realm"
					]
				}
			},
			"response": []
		},
		{
			"name": "Query Realm Stats",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query stats \r\n{ \r\n    stats \r\n    {id totalRealms totalCities totalFarms totalAquariums totalResearchLabs totalCollects totalStaked}\r\n    }",
						"variables": ""
					}
				},
				"url": {
					"raw": "https://api.thegraph.com/subgraphs/name/jona/realm",
					"protocol": "https",
					"host": [
						"api",
						"thegraph",
						"com"
					],
					"path": [
						"subgraphs",
						"name",
						"jona",
						"realm"
					]
				}
			},
			"response": []
		}
	]
}